The Fast Fourier Transform (FFT) computes the discrete Fourier transform (DFT) of an n-dimensional signal in O(n log n) time.  If many of the Fourier coefficients of the input signal are small or zero, the output of the DFT will also be sparse.  The Sparse Fast Fourier Transform is an algorithm for computing DFT when the input signal is known to be sparse and has better computational complexity than the FFT in that case.  Presented in 2012 by Haitham Hassanieh, Piotr Indyk, Dina Katabi and Eric Price (MIT), the algorithm and research code were improved upon by Jorn Schumacher and Markus Puschel (ETH Zurich) in 2013.  This Python module exposes an interface to sfft-0.1.0 downloaded from http://www.spiral.net/software/sfft.html.
